/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-active-name: 'arrow-active';
@arrow-active-x: 0px;
@arrow-active-y: 0px;
@arrow-active-offset-x: 0px;
@arrow-active-offset-y: 0px;
@arrow-active-width: 14px;
@arrow-active-height: 14px;
@arrow-active-total-width: 52px;
@arrow-active-total-height: 30px;
@arrow-active-image: '../images/sprite.png';
@arrow-active: 0px 0px 0px 0px 14px 14px 52px 30px '../images/sprite.png' 'arrow-active';
@arrow-name: 'arrow';
@arrow-x: 14px;
@arrow-y: 0px;
@arrow-offset-x: -14px;
@arrow-offset-y: 0px;
@arrow-width: 14px;
@arrow-height: 14px;
@arrow-total-width: 52px;
@arrow-total-height: 30px;
@arrow-image: '../images/sprite.png';
@arrow: 14px 0px -14px 0px 14px 14px 52px 30px '../images/sprite.png' 'arrow';
@site-gray-name: 'site-gray';
@site-gray-x: 0px;
@site-gray-y: 14px;
@site-gray-offset-x: 0px;
@site-gray-offset-y: -14px;
@site-gray-width: 12px;
@site-gray-height: 16px;
@site-gray-total-width: 52px;
@site-gray-total-height: 30px;
@site-gray-image: '../images/sprite.png';
@site-gray: 0px 14px 0px -14px 12px 16px 52px 30px '../images/sprite.png' 'site-gray';
@site-green-name: 'site-green';
@site-green-x: 12px;
@site-green-y: 14px;
@site-green-offset-x: -12px;
@site-green-offset-y: -14px;
@site-green-width: 12px;
@site-green-height: 16px;
@site-green-total-width: 52px;
@site-green-total-height: 30px;
@site-green-image: '../images/sprite.png';
@site-green: 12px 14px -12px -14px 12px 16px 52px 30px '../images/sprite.png' 'site-green';
@site-red-name: 'site-red';
@site-red-x: 28px;
@site-red-y: 0px;
@site-red-offset-x: -28px;
@site-red-offset-y: 0px;
@site-red-width: 12px;
@site-red-height: 16px;
@site-red-total-width: 52px;
@site-red-total-height: 30px;
@site-red-image: '../images/sprite.png';
@site-red: 28px 0px -28px 0px 12px 16px 52px 30px '../images/sprite.png' 'site-red';
@site-red1-name: 'site-red1';
@site-red1-x: 40px;
@site-red1-y: 0px;
@site-red1-offset-x: -40px;
@site-red1-offset-y: 0px;
@site-red1-width: 12px;
@site-red1-height: 16px;
@site-red1-total-width: 52px;
@site-red1-total-height: 30px;
@site-red1-image: '../images/sprite.png';
@site-red1: 40px 0px -40px 0px 12px 16px 52px 30px '../images/sprite.png' 'site-red1';
@spritesheet-width: 52px;
@spritesheet-height: 30px;
@spritesheet-image: '../images/sprite.png';
@spritesheet-sprites: @arrow-active @arrow @site-gray @site-green @site-red @site-red1;
@spritesheet: 52px 30px '../images/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
